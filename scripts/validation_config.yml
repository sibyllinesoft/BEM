# BEM Release Validation Configuration

# Quality thresholds
coverage_threshold: 85.0
performance_threshold: 2.0  # seconds for standard processing
memory_limit: 1024  # MB
documentation_coverage: 95.0

# Supported Python versions
required_python_versions:
  - "3.8"
  - "3.9"
  - "3.10"
  - "3.11"

# Required repository files
required_files:
  - "README.md"
  - "LICENSE"
  - "CONTRIBUTING.md"
  - "SECURITY.md"
  - "CODE_OF_CONDUCT.md"
  - "CHANGELOG.md"
  - "requirements.txt"
  - "pyproject.toml"
  - "setup.py"
  - "MANIFEST.in"

# Required directories
required_directories:
  - "src"
  - "tests"
  - "docs"
  - "scripts"
  - ".github"

# GitHub configuration
github_config:
  required_workflows:
    - "ci.yml"
    - "release.yml"
    - "security.yml"
    - "docs.yml"
  
  required_templates:
    - "ISSUE_TEMPLATE/bug_report.yml"
    - "ISSUE_TEMPLATE/feature_request.yml"
    - "PULL_REQUEST_TEMPLATE.md"
  
  required_files:
    - "CODEOWNERS"
    - "dependabot.yml"
    - "FUNDING.yml"

# Security checks
security:
  secret_patterns:
    - 'password\s*=\s*["\'][^"\']+["\']'
    - 'api_key\s*=\s*["\'][^"\']+["\']'
    - 'secret\s*=\s*["\'][^"\']+["\']'
    - 'token\s*=\s*["\'][^"\']+["\']'
    - 'PRIVATE_KEY'
    - 'BEGIN RSA PRIVATE KEY'
  
  required_security_files:
    - "SECURITY.md"
    - ".github/workflows/security.yml"

# Documentation requirements
documentation:
  readme_sections:
    - "# BEM"
    - "## Installation"
    - "## Quick Start"
    - "## Features"
    - "## Documentation"
    - "## Contributing"
    - "## License"
  
  required_docs:
    - "docs/API.md"
    - "docs/QUICK_START.md"
    - "docs/USER_GUIDE.md"
    - "docs/DEVELOPER_GUIDE.md"
    - "docs/TROUBLESHOOTING.md"

# Performance benchmarks
performance:
  benchmark_script: "scripts/run_benchmarks.py"
  timeout: 300  # seconds
  memory_monitoring: true
  
  baseline_metrics:
    processing_time: 2.0  # seconds
    memory_usage: 512    # MB
    startup_time: 5.0    # seconds

# Docker configuration
docker:
  required_files:
    - "Dockerfile"
    - "docker-compose.yml"
    - ".dockerignore"
  
  dockerfile_requirements:
    - "FROM"
    - "WORKDIR"
    - "COPY"
    - "RUN"
    - "CMD"

# License compliance
licenses:
  acceptable_licenses:
    - "MIT"
    - "Apache-2.0"
    - "BSD-3-Clause"
    - "BSD-2-Clause"
  
  required_files:
    - "LICENSE"
    - "NOTICE"

# Testing configuration
testing:
  test_commands:
    - "pytest tests/"
    - "python -m pytest tests/ -v"
  
  coverage_command: "coverage run -m pytest"
  coverage_report: "coverage report --format=json"
  
  required_test_types:
    - "unit"
    - "integration"
    - "performance"

# Code quality tools
quality_tools:
  linters:
    - name: "flake8"
      command: "flake8 src tests scripts"
    - name: "mypy" 
      command: "mypy src"
    - name: "black"
      command: "black --check src tests scripts"
  
  security_tools:
    - name: "bandit"
      command: "bandit -r src"
    - name: "safety"
      command: "safety check"

# Release artifacts
release_artifacts:
  build_commands:
    - "python setup.py sdist bdist_wheel"
    - "docker build -t bem:latest ."
  
  required_artifacts:
    - "dist/*.whl"
    - "dist/*.tar.gz"
  
  validation_commands:
    - "twine check dist/*"
    - "pip install dist/*.whl"

# Monitoring and metrics
monitoring:
  health_checks:
    - endpoint: "/health"
      expected_status: 200
    - endpoint: "/metrics"
      expected_status: 200
  
  performance_monitoring:
    - metric: "response_time"
      threshold: 2.0
    - metric: "memory_usage"
      threshold: 512
    - metric: "cpu_usage"
      threshold: 80