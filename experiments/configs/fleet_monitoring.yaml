# BEM Fleet Monitoring Configuration
# Real-time monitoring and alerting for all 5 missions

database_path: "fleet_monitoring.db"

# Alert thresholds for automatic monitoring
alert_thresholds:
  # Performance metrics
  em_f1:
    min: 0.70  # Minimum acceptable EM/F1 score
    decline_threshold: 0.05  # Alert if drops by more than 5%
  
  bleu:
    min: 0.20  # Minimum BLEU score
    decline_threshold: 0.03
  
  chrf:
    min: 0.25  # Minimum ChrF score
    decline_threshold: 0.03
  
  # Latency metrics
  latency_p50:
    max: 500.0  # Maximum p50 latency in ms
    spike_threshold: 2.0  # Alert if 2x baseline
  
  latency_p95:
    max: 2000.0  # Maximum p95 latency in ms
    spike_threshold: 2.0
  
  # Memory and resource metrics
  memory_usage:
    max: 85.0  # Maximum memory usage %
  
  gpu_memory:
    max: 90.0  # Maximum GPU memory usage %
  
  # Mission-specific thresholds
  violation_rate:  # Mission C
    max: 0.10  # Maximum violation rate
    increase_threshold: 0.05
  
  time_to_fix:  # Mission B
    max: 1000  # Maximum prompts to fix
  
  kv_hit_percent:  # All missions
    min: 0.80  # Minimum KV cache hit rate
  
  plan_length:  # Mission A
    max: 3  # Maximum plan length
  
  context_length_performance:  # Mission E
    min_128k: 0.85  # Minimum performance at 128k context
    min_256k: 0.80  # Minimum performance at 256k context

# Resource monitoring configuration
resource_monitoring:
  update_interval: 60  # seconds
  history_retention: 7  # days
  
  cpu_threshold: 90.0  # Alert if CPU > 90%
  memory_threshold: 85.0  # Alert if memory > 85%
  gpu_utilization_threshold: 95.0  # Alert if GPU > 95%
  gpu_memory_threshold: 90.0  # Alert if GPU memory > 90%

# Mission-specific monitoring
mission_monitoring:
  mission_a:
    critical_metrics: ["em_f1", "plan_length", "kv_hit_percent"]
    evaluation_frequency: "hourly"
    ablation_tracking: true
    
  mission_b:
    critical_metrics: ["time_to_fix", "aggregate_improvement", "drift_kl"]
    evaluation_frequency: "continuous"  # For online learning
    canary_monitoring: true
    
  mission_c:
    critical_metrics: ["violation_rate", "em_f1_drop", "orthogonality_drift"]
    evaluation_frequency: "hourly"
    red_team_tracking: true
    
  mission_d:
    critical_metrics: ["rrs_score", "ldc_score", "quality_metrics"]
    evaluation_frequency: "daily"  # Slower pretraining
    phase_tracking: true
    
  mission_e:
    critical_metrics: ["long_context_em_f1", "memory_utilization", "perplexity_spike"]
    evaluation_frequency: "hourly"
    context_length_sweep: true

# Cross-mission interaction monitoring
cross_mission_monitoring:
  interactions:
    router_online:  # Mission A + B
      metrics: ["update_frequency", "routing_consistency"]
      compatibility_check: "hourly"
      
    router_memory:  # Mission A + E  
      metrics: ["memory_routing_efficiency", "context_utilization"]
      compatibility_check: "hourly"
      
    safety_overlay:  # Mission C + All
      metrics: ["safety_activation_rate", "performance_impact"]
      compatibility_check: "continuous"
      
    sep_integration:  # Mission D + All
      metrics: ["representation_consistency", "transfer_quality"]
      compatibility_check: "daily"

# Dashboard configuration
dashboard:
  refresh_interval: 30  # seconds for auto-refresh
  metrics_history: 24  # hours to display
  
  # Page configurations
  pages:
    fleet_overview:
      key_metrics: ["em_f1", "latency_p50", "violation_rate"]
      mission_status_cards: true
      timeline_view: true
      
    mission_details:
      metrics_per_page: 6
      training_curves: true
      ablation_comparison: true
      
    cross_mission:
      correlation_analysis: true
      interaction_matrix: true
      pareto_frontier: true
      
    resource_monitoring:
      real_time_graphs: true
      utilization_history: 24  # hours
      alert_integration: true
      
    statistical_analysis:
      confidence_level: 0.95
      bootstrap_visualization: true
      fdr_correction_display: true

# Alerting configuration
alerting:
  channels:
    console: true
    database: true
    email: false  # Configure SMTP settings if needed
    slack: false  # Configure webhook if needed
  
  severity_levels:
    critical:
      conditions:
        - "performance_drop > 10%"
        - "system_failure"
        - "security_violation"
      response: "immediate"
      
    warning:
      conditions:
        - "threshold_exceeded"
        - "resource_high"
        - "metric_degradation"
      response: "within_15_minutes"
      
    info:
      conditions:
        - "milestone_reached"
        - "phase_transition"
        - "routine_update"
      response: "log_only"
  
  escalation:
    warning_to_critical: 3  # warnings in 1 hour
    auto_rollback_conditions:
      - "critical_performance_drop"
      - "system_instability"
      - "safety_failure"

# Statistical validation configuration
statistical_validation:
  framework: "paired_bca_fdr"
  confidence_level: 0.95
  bootstrap_samples: 10000
  fdr_method: "fdr_bh"  # Benjamini-Hochberg
  
  promotion_criteria:
    mission_a:
      em_f1_improvement: 0.015  # 1.5%
      latency_overhead_max: 0.15  # 15%
      statistical_significance: true
      
    mission_b:
      time_to_fix_max: 1000
      aggregate_improvement_min: 0.01  # 1%
      soak_test_clean: true
      
    mission_c:
      violation_reduction_min: 0.30  # 30%
      em_f1_drop_max: 0.01  # 1%
      knob_responsiveness: true
      
    mission_d:
      rrs_improvement: true
      ldc_reduction: true
      quality_neutral_or_positive: true
      
    mission_e:
      long_context_improvement: true
      context_length_min: 131072  # 128k
      perplexity_spike_max: 1.2

# Data retention and cleanup
data_management:
  raw_metrics_retention: 30  # days
  aggregated_retention: 90  # days
  alert_log_retention: 30  # days
  
  cleanup_schedule: "daily_at_2am"
  backup_enabled: true
  backup_retention: 7  # days

# Integration settings
integrations:
  mlflow:
    enabled: false
    tracking_uri: "http://localhost:5000"
    
  wandb:
    enabled: false
    project: "bem_fleet"
    
  tensorboard:
    enabled: true
    log_dir: "logs/tensorboard"
    
  prometheus:
    enabled: false
    endpoint: "http://localhost:9090"

# Security and access control
security:
  authentication_required: false
  allowed_ips: []  # Empty list allows all IPs
  
  # API keys for external integrations
  api_keys:
    monitoring_api: null
    alert_webhook: null

# Performance optimization
performance:
  database_connection_pool: 10
  metrics_batch_size: 100
  async_processing: true
  cache_enabled: true
  cache_ttl: 300  # seconds

# Development and debugging
development:
  debug_mode: false
  verbose_logging: false
  mock_data_enabled: false
  
  # Testing configuration
  test_data_generation: false
  simulation_mode: false
