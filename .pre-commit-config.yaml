repos:
  # Code formatting
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--unsafe']
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: ['--maxkb=50000']  # Allow large model files up to 50MB
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: mixed-line-ending
      - id: check-docstring-first
      - id: debug-statements
      - id: name-tests-test
        args: ['--pytest-test-first']

  # Python code formatting with Black
  - repo: https://github.com/psf/black
    rev: 23.9.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  # Import sorting with isort
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]

  # Python linting with flake8
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args:
          - --max-line-length=88
          - --extend-ignore=E203,W503
          - --select=E9,F63,F7,F82
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify

  # Type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.6.1
    hooks:
      - id: mypy
        additional_dependencies:
          - types-PyYAML
          - types-requests
          - types-redis
        args: [--ignore-missing-imports, --scripts-are-modules]
        files: ^src/

  # Security linting with bandit
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml']
        additional_dependencies: ['bandit[toml]']
        exclude: 'tests/|scripts/demos/|archive/'

  # Dependency vulnerability checking
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        args: ['--disable-optional-telemetry']

  # Documentation formatting
  - repo: https://github.com/executablebooks/mdformat
    rev: 0.7.17
    hooks:
      - id: mdformat
        additional_dependencies:
          - mdformat-gfm
          - mdformat-black
        args: ['--wrap=88']
        files: '\.md$'
        exclude: 'archive/|CHANGELOG.md'

  # Jupyter notebook formatting
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.7.0
    hooks:
      - id: nbqa-black
        args: [--line-length=88]
      - id: nbqa-isort
        args: [--profile=black]
      - id: nbqa-flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503]

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.3
    hooks:
      - id: prettier
        types_or: [yaml, json]
        exclude: '\.github/workflows/|experiments/.*\.ya?ml$|\.pre-commit-config\.yaml$'

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.5
    hooks:
      - id: shellcheck
        args: [-e, SC1091]

  # Python docstring formatting
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args:
          - --convention=google
          - --add-ignore=D100,D101,D102,D103,D104,D105,D107  # Allow missing docstrings in some cases
        files: ^src/

  # Check for common programming errors
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-check-blanket-noqa
      - id: python-check-blanket-type-ignore
      - id: python-no-log-warn
      - id: python-use-type-annotations
      - id: rst-backticks
      - id: rst-directive-colons
      - id: rst-inline-touching-normal

  # Upgrade Python syntax
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.0
    hooks:
      - id: pyupgrade
        args: [--py39-plus]

  # Check requirements.txt
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: requirements-txt-fixer

  # Add license header to Python files
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.4
    hooks:
      - id: insert-license
        files: \.py$
        args:
          - --license-filepath
          - .license-header.txt
          - --comment-style
          - '#'
        exclude: 'tests/|setup.py|__init__.py|archive/'

# Configuration
default_install_hook_types: [pre-commit, commit-msg, pre-push]
default_stages: [commit, push]

# Performance optimization
repos_search_paths: ['.pre-commit-cache']
minimum_pre_commit_version: '2.20.0'

# Exclude patterns
exclude: |
  (?x)(
    ^archive/|
    ^models/.*cache/|
    ^logs/|
    ^results/.*\.json$|
    ^\.git/|
    ^deployment/dist/|
    \.egg-info/|
    __pycache__/|
    \.pyc$|
    ^repomix\.config\.json$
  )

# CI configuration - faster checks for CI
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: 'main'
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [python-safety-dependencies-check]  # Skip slow checks in CI
  submodules: false